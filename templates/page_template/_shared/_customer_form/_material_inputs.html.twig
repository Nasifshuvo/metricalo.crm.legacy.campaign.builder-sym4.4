<style type="text/css">

    .customer-form-error {
        display: block;
        width: 100%;
        margin-top: .25rem;
        font-size: .875em;
        color: #dc3545;
    }

    .moving-label {
        position: absolute;
        /*font-size: 1rem;*/
        left: 0;
        top: 50%;
        transform: translateY(-50%);
        background-color: white;
        color: gray;
        padding: 0 0.5rem;
        margin: 0 1rem;
        transition: .1s ease-out;
        transform-origin: left top;
        pointer-events: none;
    }

    .material-input {
        font-size: 1rem;
        outline: none;
        border: 1px solid gray;
        border-radius: 5px;
        padding: 1rem 0.7rem;
        color: gray;
        transition: 0.1s ease-out;
    }

    .material-input:focus {
        border: 1px solid #6200EE;
    }

    .material-input:focus + label {
        color: #6200EE;
        top: 0;
        transform: translateY(-50%) scale(.9);
    }

    .material-input:not(:placeholder-shown) + label {
        top: 0;
        transform: translateY(-50%) scale(.9);
    }

    .invalid-input + label {
        top: 25%;
    }
</style>

<form role="form" method="POST"
                                       action="{{ path('app.front.campaign.new', {'_locale': app.request.getLocale(), 'slug': campaign.slug }) }}"
                                       id="customer_form" class="needs-validation form-horizontal" novalidate>
    {{ form_start(customerForm) }}

    <div class="row">
        <div class="col-12 col-md-6 position-relative mt-3">
            {{ form_widget(customerForm.first_name, { 'attr':
                {
                    'class': 'form-control required input material-input',
                    'placeholder': " ",
                    'autocorrect': 'off',
                    'required': 'required',
                    'pattern': '.{2,}',
                    'autofocus': 'true'
                }
            }) }}
            <label for="first_name" class="moving-label">{{ 'first_name'|trans({}, 'form_customer') }}</label>
            <div class="invalid-feedback">
                {{ 'First name must be at least {{ limit }} characters long.'|trans({'{{ limit }}': 2}, 'validators') }}
            </div>
            <div class="customer-form-error">
                {{ form_errors(customerForm.first_name) }}
            </div>
        </div>
        <div class="col-12 col-md-6 position-relative mt-3">
            {{ form_widget(customerForm.last_name, { 'attr':
                {
                    'class': 'form-control required input material-input',
                    'placeholder': " ",
                    'autocorrect': 'off',
                    'required': 'required',
                    'pattern': '.{2,}'
                }
            }) }}
            <label for="last_name" class="moving-label">{{ 'last_name'|trans({}, 'form_customer') }}</label>
            <div class="invalid-feedback">
                {{ 'Last name must be at least {{ limit }} characters long.'|trans({'{{ limit }}': 2}, 'validators') }}
            </div>
            <div class="customer-form-error">
                {{ form_errors(customerForm.last_name) }}
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12 position-relative mt-3">
            {{ form_widget(customerForm.address, { 'attr':
                {
                    'class': 'form-control required input material-input',
                    'placeholder': " ",
                    'autocorrect': 'off',
                    'required': 'required'
                }
            }) }}
            <label for="address" class="moving-label">{{ 'address'|trans({}, 'form_customer') }}</label>
            <div class="invalid-feedback">
                {{ 'Address must at least {{ limit }} characters long.'|trans({'{{ limit }}': 5}, 'validators') }}
            </div>
            <div class="customer-form-error">
                {{ form_errors(customerForm.address) }}
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12 col-md-6 position-relative mt-3">
            {{ form_widget(customerForm.postcode, { 'attr':
                {
                    'class': 'form-control required input material-input',
                    'placeholder': " ",
                    'autocorrect': 'off',
                    'minlength': '1',
                    'maxlength': '30',
                    'required': 'required'
                }
            }) }}
            <label for="postcode" class="moving-label">{{ 'zipcode'|trans({}, 'form_customer') }}</label>
            <div class="invalid-feedback">
                {{ 'Postcode must be at least {{ limit }} characters long.'|trans({'{{ limit }}': 3}, 'validators') }}
            </div>
            <div class="customer-form-error">
                {{ form_errors(customerForm.postcode) }}
            </div>
        </div>
        <div class="col-12 col-md-6 position-relative mt-3">
            {{ form_widget(customerForm.city, { 'attr':
                {
                    'class': 'form-control required input material-input',
                    'placeholder': " ",
                    'autocorrect': 'off',
                    'minlength': '1',
                    'maxlength': '80',
                    'required': 'required'
                }
            }) }}
            <label for="city" class="moving-label">{{ 'city'|trans({}, 'form_customer') }}</label>
            <div class="invalid-feedback">
                {{ 'City must be at least {{ limit }} characters long.'|trans({'{{ limit }}': 2}, 'validators') }}
            </div>
            <div class="customer-form-error">
                {{ form_errors(customerForm.city) }}
            </div>
        </div>
    </div>
    {% if (lead.getCountryCode() == 'CA' or lead.getCountryCode() == 'MY') %}
        <div class="row">
            <div class="col-12 position-relative mt-3">
                {{ form_widget(customerForm.state, { 'attr':
                    {
                        'class': 'form-control input material-input',
                        'placeholder': " ",
                        'autocorrect': 'off'
                    }
                }) }}
                <label for="state" class="moving-label">{{ 'state'|trans({}, 'form_customer') }}</label>
                <div class="invalid-feedback">
                    {{ 'Please select a valid state.'|trans({}, 'validators') }}
                </div>
                <div class="customer-form-error">
                    {{ form_errors(customerForm.state) }}
                </div>
            </div>
        </div>
    {% endif %}
    <div class="row">
        <div class="col-12 position-relative mt-3">
            {% set email_field_attributes = {
                'class': 'form-control required input material-input',
                'placeholder': " ",
                'autocorrect': 'off',
                'required': 'required',
                'pattern': '.{6,}'
            } %}
            {% if app.request.query.get("lock_email") == 1 %}
                {% set email_field_attributes = email_field_attributes|merge({ 'readonly': 'readonly' }) %}
            {% endif %}
            {{ form_widget(customerForm.email, { 'attr': email_field_attributes }) }}
            <label for="email" class="moving-label">{{ 'email'|trans({}, 'form_customer') }}</label>

            <div class="invalid-feedback">
                {{ 'Please enter a valid email address.'|trans({}, 'validators') }}
            </div>
            <div class="customer-form-error">
                {{ form_errors(customerForm.email) }}
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12 position-relative mt-3">
            {{ form_widget(customerForm.phone, { 'attr':
                {
                    'class': 'form-control required input material-input',
                    'placeholder': " ",
                    'required': 'required',
                    'autocorrect': 'off',
                    'pattern': '^[+ ]?[0-9]{5,18}$'
                }
            }) }}
            <label for="phone" class="moving-label">{{ 'phone'|trans({}, 'form_customer') }}</label>
            <div class="invalid-feedback">
                {{ 'Please enter a valid phone number without a country prefix.'|trans({}, 'validators') }}
            </div>
            <div class="customer-form-error">
                {{ form_errors(customerForm.phone) }}
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12 py-2">
            <div class="checkbox form-checkbox">
                <label class="maxwidth">
                    <input type="checkbox" class="big-checkbox" required="required" name="customer[terms]" id="terms"
                           value="true"
                           data-validator-message="{{ 'you_must_accept_the_terms_and_conditions'|trans({}, 'form_customer') }}">
                    <span>
                        {% if campaign.isContest() %}

                            {{ 'i.am.18.years.old.and.accept.the.terms.and.conditions.and.the.promotional.terms'|trans({
                                '{{ start_a_terms }}': '<a class="termslink" data-bs-toggle="modal" data-bs-target="#general_terms_modal">',
                                '{{ end_a }}': '</a>',
                                '{{ start_a_promotion }}': '<a class="termslink" data-bs-toggle="modal" data-bs-target="#promotional_terms_modal">',
                            }, 'form_customer')|raw }}

                        {% else %}

                            {{ 'i.am.18.years.old.and.accept.the.terms.and.conditions'|trans({
                                '{{ start_a_terms }}': '<a class="termslink" data-bs-toggle="modal" data-bs-target="#general_terms_modal">',
                                '{{ end_a }}': '</a>'
                            }, 'form_customer')|raw }}

                            {% if campaign.isV2Terms() %}
                                {{ 'and.the.subscription.terms.and.conditions'|trans({
                                    '{{ start_a_terms }}': '<a class="termslink" data-bs-toggle="modal" data-bs-target="#general_terms_extract">',
                                    '{{ end_a }}': '</a>'
                                }, 'form_customer')|raw }}
                            {% endif %}
                        {% endif %}

                        {% if campaign.getVertical() is empty %}
                            <br>
                            {% if product.hasTrial() %}
                                {{ 'is_only_valid_for_new_members_of'|trans({'%subscription_name%': product.getSubscriptionName(), '%trial_days%': product.getSubscriptionTrialDays(), '%trial_price%': product.getPrice()|priceIntl(product.getCurrency(), lead.getIntlLocale()), '%subscription_price%': product.getSubscriptionPrice()|priceIntl(product.getCurrency(), lead.getIntlLocale()), '%subscription_interval_days%': product.getSubscriptionIntervalDays()}, 'form_customer')|raw }}
                            {% else %}
                                {{ 'is.only.valid.for.new.members.of.no.trial'|trans({'%subscription_name%': product.getSubscriptionName(), '%trial_days%': product.getSubscriptionTrialDays(), '%trial_price%': product.getPrice()|priceIntl(product.getCurrency(), lead.getIntlLocale()), '%subscription_price%': product.getSubscriptionPrice()|priceIntl(product.getCurrency(), lead.getIntlLocale()), '%subscription_interval_days%': product.getSubscriptionIntervalDays()}, 'form_customer')|raw }}
                            {% endif %}
                        {% endif %}
                    </span>
                </label>
            </div>
            {% if campaign.getVertical() is empty %}
                <div class="checkbox form-checkbox">
                    <label class="maxwidth">
                        {{ form_widget(customerForm.accepting_newsletter, { 'attr':
                            {
                                'class': 'big-checkbox',
                            } }) }}
                        <span>{{ 'Tick.this.box.to.receive.offers.promotions.and.other.commercial.messages.you.can.unsubscribe.at.any.time'|trans({}, 'form_customer') }}</span>
                    </label>
                </div>
            {% endif %}
        </div>
    </div>
    <div class="form-group">
        <button type="submit" name="submit" id="customer_submit_btn"
                class="btn btn-success btn-lg btn-block">{{ 'continue'|trans({}, 'form_customer') }} <span
                class="glyphicon glyphicon-chevron-right"></span></button>
    </div>

    {{ form_widget(customerForm._token) }}

    {{ form_end(customerForm, {'render_rest': false}) }}
</form>

<script type="text/javascript">
    // Example starter JavaScript for disabling form submissions if there are invalid fields
    (function () {
        'use strict'

        // Fetch all the forms we want to apply custom Bootstrap validation styles to
        var forms = document.querySelectorAll('.needs-validation');
        let invalidInputs = Array.from(document.querySelectorAll('input:invalid'));

        // Loop over them and prevent submission
        Array.prototype.slice.call(forms)
            .forEach(function (form) {
                form.addEventListener('submit', function (event) {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()

                        invalidInputs.forEach(input => {
                            input.classList.add('invalid-input');
                        })
                    }

                    form.classList.add('was-validated')
                }, false)
            })
    })()
</script>
